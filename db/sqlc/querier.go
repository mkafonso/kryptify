// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.21.0

package db

import (
	"context"
	"time"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	// Create a new account
	// Parameters: name, email, password_hash
	// Returns: Newly created account
	CreateAccount(ctx context.Context, arg CreateAccountParams) error
	// Create a new credential
	// Parameters: email, password_hash, website, owner_id
	// Returns: Newly created credential
	CreateCredential(ctx context.Context, arg CreateCredentialParams) error
	// Create a new session
	// Parameters: account_id, refresh_token, user_agent, client_ip, is_blocked, expires_at
	// Returns: Newly created session
	CreateSession(ctx context.Context, arg CreateSessionParams) error
	// Delete a credential by ID
	// Parameters: credentialID
	DeleteCredential(ctx context.Context, id uuid.UUID) error
	// Find an account by email
	// Parameters: email
	// Returns: Single account matching the email
	FindAccountByEmail(ctx context.Context, email string) (Account, error)
	// Get an account by ID
	// Parameters: id
	// Returns: Single account matching the ID
	GetAccountByID(ctx context.Context, id uuid.UUID) (Account, error)
	// Get a credential by ID
	// Parameters: id
	// Returns: Credential with the specified ID
	GetCredentialByID(ctx context.Context, id uuid.UUID) (Credential, error)
	// Get all credentials belonging to a specific owner
	// Parameters: ownerID
	// Returns: List of credentials owned by the specified ID
	GetCredentialsByOwnerID(ctx context.Context, ownerID uuid.UUID) ([]Credential, error)
	// Update an account by email
	// Parameters: name, avatar_url, password_hash, updated_at, email
	// Returns: Updated account
	UpdateAccount(ctx context.Context, arg UpdateAccountParams) error
	// Update a credential by ID
	// Parameters: email, website, category, password_hash, updated_at, id
	// Returns: Updated credential
	UpdateCredential(ctx context.Context, arg UpdateCredentialParams) error
}

var _ Querier = (*Queries)(nil)
